package org.firstinspires.ftc.teamcode;

        import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
        import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
        import com.qualcomm.robotcore.hardware.DcMotor;
        import com.qualcomm.robotcore.hardware.DcMotorController;

@Autonomous(name="OldEncoders", group="Autonomous")
public class OldEncoders extends LinearOpMode
{
    DcMotor leftDrive;
    DcMotor rightDrive;
    private DcMotor back_leftDrive = null;
    private DcMotor back_rightDrive = null;
    @Override
    public void runOpMode() throws InterruptedException
    {
        leftDrive = hardwareMap.dcMotor.get("left_drive");
        rightDrive = hardwareMap.dcMotor.get("right_drive");
        rightDrive.setDirection(DcMotor.Direction.REVERSE);
        back_leftDrive  = hardwareMap.get(DcMotor.class, "back_left_drive");
        back_rightDrive = hardwareMap.get(DcMotor.class, "back_right_drive");
        // reset encoder count kept by left motor.
        leftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        rightDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        back_leftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        back_rightDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);

        leftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        rightDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        back_leftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        back_rightDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);

        telemetry.addData("Mode", "waiting");
        telemetry.update();


        // wait for start button.

        waitForStart();

        // set left motor to run to target encoder position and stop with brakes on.
        leftDrive.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        rightDrive.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        back_leftDrive.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        back_rightDrive.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        // set right motor to run without regard to an encoder.

        telemetry.addData("Mode", "running");
        telemetry.update();

        // set left motor to run for 5000 encoder counts.
        // 1 rotations is 1120 ticks so mutiply 4pi and the number of rotation u have at that should
        // come out to be how many inches it will be. So find the number of rotations mutiply it with 1120
        // this is for one foot(1068)
        // (12 * (1120 / (4pi) )) = 1068

        leftDrive.setTargetPosition((int) (1069.6*1));
        rightDrive.setTargetPosition((int)(1069.6*1));
        back_leftDrive.setTargetPosition((int) (1069.6*1));
        back_rightDrive.setTargetPosition((int) (1069.6*1));


        // set both motors to 25% power. Movement will start.

        double power = 0.5;
        //you might want to make left negative later
        leftDrive.setPower(power);
        rightDrive.setPower(power);
        back_leftDrive.setPower(power);
        back_rightDrive.setPower(power);
        // wait while opmode is active and left motor is busy running to position.

        while (opModeIsActive() && leftDrive.isBusy())
        {
            telemetry.addData("encoder-fwd", leftDrive.getCurrentPosition() + "  busy=" + leftDrive.isBusy());
            telemetry.update();
            idle();
        }

        // set motor power to zero to turn off motors. The motors stop on their own but
        // power is still applied so we turn off the power.
        //one means how many feet that you move so if I change to 2 then it moves two feet
        leftDrive.setPower(1069.6*1);
        rightDrive.setPower(1069.6*1);
        back_leftDrive.setPower(1069.6*1);
        back_rightDrive.setPower(1069.6*1);
        leftDrive.setTargetPosition((int) (1069.6*2));
        rightDrive.setTargetPosition((int)(1069.6*2));
        back_leftDrive.setTargetPosition((int) (1069.6*2));
        back_rightDrive.setTargetPosition((int) (1069.6*2));
        // wait 5 sec to you can observe the final encoder position.

        resetStartTime();

        while (opModeIsActive() && getRuntime() < 5)
        {
            telemetry.addData("encoder-fwd-end", leftDrive.getCurrentPosition() + "  busy=" + leftDrive.isBusy());
            telemetry.update();
            idle();
        }

        // set position for back up to starting point. In this example instead of
        // having the motor monitor the encoder we will monitor the encoder ourselves.

        leftDrive.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
        //start
        leftDrive.setTargetPosition((int) (-1069.6*2));
        rightDrive.setTargetPosition((int)(-1069.6*2));
        back_leftDrive.setTargetPosition((int) (-1069.6*2));
        back_rightDrive.setTargetPosition((int) (-1069.6*2));
        leftDrive.setPower((int) (-1069.6*2));
        rightDrive.setPower((int)(-1069.6*2));
        back_leftDrive.setPower(-1069.6*2);
        back_rightDrive.setPower(-1069.6*2);

        while (opModeIsActive() && leftDrive.getCurrentPosition() < leftDrive.getTargetPosition())
        {
            telemetry.addData("encoder-back", leftDrive.getCurrentPosition());
            telemetry.update();
            idle();
        }

        // set motor power to zero to stop motors.
        //end
        leftDrive.setPower(1069.6*1);
        rightDrive.setPower(1069.6*1);
        back_leftDrive.setPower(1069.6*1);
        back_rightDrive.setPower(1069.6*1);

        resetStartTime();
        leftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        rightDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        back_leftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        back_rightDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);

        leftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        rightDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        back_leftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        back_rightDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        telemetry.addData("Mode", "waiting");
        telemetry.update();


        // wait for start button.

        waitForStart();

        // set left motor to run to target encoder position and stop with brakes on.
        leftDrive.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        rightDrive.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        back_leftDrive.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        back_rightDrive.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        // set right motor to run without regard to an encoder.

        telemetry.addData("Mode", "running");
        telemetry.update();

        // set left motor to run for 5000 encoder counts.
        // 1 rotations is 1120 ticks so mutiply 4pi and the number of rotation u have at that should
        // come out to be how many inches it will be. So find the number of rotations mutiply it with 1120
        // this is for one foot(1068)
        // (12 * (1120 / (4pi) )) = 1068
        leftDrive.setTargetPosition((int) (1069.6*1));
        rightDrive.setTargetPosition((int) (1069.6*1));
        back_leftDrive.setTargetPosition((int) (1069.6*1));
        back_rightDrive.setTargetPosition((int) (1069.6*1));


        // set both motors to 25% power. Movement will start.
        //you might want to make left negative later
        leftDrive.setPower(power);
        rightDrive.setPower(power);
        back_leftDrive.setPower(power);
        back_rightDrive.setPower(power);
        telemetry.addData("tileftDrive.setPower(power);\n" +
                "        rightDrive.setPower(power);cks:",power);

        // wait while opmode is active and left motor is busy running to position.

        while (opModeIsActive() && leftDrive.isBusy())
        {
            telemetry.addData("encoder-fwd", leftDrive.getCurrentPosition() + "  busy=" + leftDrive.isBusy());
            telemetry.update();
            idle();
        }

        // set motor power to zero to turn off motors. The motors stop on their own but
        // power is still applied so we turn off the power.
        //find way to update distance
        //one means how many feet that you move so if I change to 2 then it moves two feet
        leftDrive.setPower(1069.6*1);
        rightDrive.setPower(1069.6*1);
        back_leftDrive.setPower(1069.6*1);
        back_rightDrive.setPower(1069.6*1);
        // wait 5 sec to you can observe the final encoder position.

        resetStartTime();

        while (opModeIsActive() && getRuntime() < 5)
        {
            telemetry.addData("encoder-fwd-end", leftDrive.getCurrentPosition() + "  busy=" + leftDrive.isBusy());
            telemetry.update();
            idle();
        }

        // set position for back up to starting point. In this example instead of
        // having the motor monitor the encoder we will monitor the encoder ourselves.
        //change target position by one each time
        leftDrive.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
        //start
        leftDrive.setTargetPosition(3);
        back_leftDrive.setPower(1069.6*1);
        back_rightDrive.setPower(1069.6*1);



        while (opModeIsActive() && getRuntime() < 5)
        {
            telemetry.addData("encoder-back-end", leftDrive.getCurrentPosition());
            telemetry.update();
            idle();
        }
    }
}
